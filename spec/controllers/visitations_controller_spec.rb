require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe VisitationsController, type: :controller do

  # This should return the minimal set of attributes required to create a valid
  # Visitation. As you add validations to Visitation, be sure to
  # adjust the attributes here as well.

  let(:visitor) {
    FactoryGirl.create(:visitor)
  }

  let(:visitation) {
    FactoryGirl.create(:visitation, visitor_id:  visitor.id)
  }

  let(:valid_attributes) {
    FactoryGirl.build(:visitation, visitor_id: visitor.id).attributes
  }

  describe "GET #index" do
    it "assigns all visitations as @visitations" do
      get :index, visitor_id: visitor.id
      expect(assigns(:visitations)).to eq([visitation])
    end

    it "fails without a valid Visitor ID" do
      expect {get(:index, {visitor_id: -1})}.to raise_error(ActiveRecord::RecordNotFound)
    end
  end
end
